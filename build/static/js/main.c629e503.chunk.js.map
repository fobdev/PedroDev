{"version":3,"sources":["components/utils/animations.ts","images/hero1.gif","components/Hero.tsx","components/styles/Contact.ts","components/Contact.tsx","images/logo.svg","images/us.svg","images/br.svg","images/discord.svg","components/Head.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","color","boxShadow","transform","colorChange","animationName","animationDuration","animationIterationCount","animationDirection","animationTimingFunction","float","Hero","useState","animate","setAnimate","style","backgroundColor","Container","sx","display","height","justifyContent","paddingBottom","alignItems","fontSize","fontFamily","fontWeight","textAlign","position","span","textShadow","marginTop","columnGap","padding","borderRadius","img","width","flexDirection","rowGap","Box","Fade","in","timeout","enter","Typography","className","variant","Button","disableRipple","size","startIcon","onClick","window","scrollBy","top","left","behavior","src","img1","alt","mainContainer","borderColor","gridArea","gridGap","gridTemplateAreas","emailRegex","Contact","emailJS","init","emailObject","email","subject","message","form","setForm","emailRef","useRef","messageRef","subjectRef","popup","setPopup","popup_error","setPopup_error","popup_emptyFields","setPopup_emptyFields","loading","setLoading","buttonEnabled","setButtonEnabled","handlePopup","state","handleChange","prop","e","target","value","test","alignSelf","TextField","onChange","inputRef","defaultValue","type","id","required","label","multiline","rows","LoadingButton","disabled","loadingIndicator","send","then","response","console","log","error","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Head","main_color","setOpen","anchorRef","handleErrorPopup","event","current","contains","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","theme","createTheme","components","MuiButton","styleOverrides","root","a_style","textDecoration","zIndex","backdropFilter","maxWidth","disableGutters","a","marginLeft","userSelect","href","Grow","logo","marginRight","IconButton","component","listStyle","margin","Slide","scrollTo","li","ref","Popper","anchorEl","role","undefined","placement","transition","disablePortal","TransitionProps","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","br_png","us_png","discord_svg","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","app","initializeApp","getAnalytics","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c629e503.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\n\nexport const useStyles = makeStyles({\n    \"@keyframes colorChange\": {\n        \"0%\": {\n            color: \"#ee6055\",\n        },\n        \"25%\": {\n            color: \"#60d394\",\n        },\n        \"50%\": {\n            color: \"#aaf683\",\n        },\n        \"75%\": {\n            color: \"#ffd97d\",\n        },\n        \"100%\": {\n            color: \"#ff9b85\",\n        },\n    },\n\n    \"@keyframes float\": {\n        \"0%\": {\n            boxShadow: \"0 5px 15px 0px rgba(0,0,0,0.6)\",\n            transform: \"translatey(0px)\",\n        },\n        \"50%\": {\n            boxShadow: \"0 25px 15px 0px rgba(0,0,0,0.2)\",\n            transform: \"translatey(-20px)\",\n        },\n        \"100%\": {\n            boxShadow: \"0 5px 15px 0px rgba(0,0,0,0.6)\",\n            transform: \"translatey(0px)\",\n        },\n    },\n    colorChange: {\n        animationName: \"$colorChange\",\n        animationDuration: \"5s\",\n        animationIterationCount: \"infinite\",\n        animationDirection: \"alternate\",\n        animationTimingFunction: \"linear\",\n    },\n    float: {\n        animationName: \"$float\",\n        animationDuration: \"8s\",\n        animationIterationCount: \"infinite\",\n        animationTimingFunction: \"ease-in-out\",\n    },\n});\n\nexport default useStyles;\n","export default __webpack_public_path__ + \"static/media/hero1.567e4b5d.gif\";","import { Fade, Typography, Container, Button, Box } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useStyles } from \"./utils/animations\";\nimport img1 from \"../images/hero1.gif\";\nimport \"./utils/animations.ts\";\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\";\nimport ComputerRoundedIcon from \"@mui/icons-material/ComputerRounded\";\nexport default function Hero() {\n    const main_color = \"#49a6e9\";\n    const { colorChange, float } = useStyles();\n    const [animate, setAnimate] = useState(false);\n\n    return (\n        <div style={{ backgroundColor: \"#eee\" }}>\n            <Container\n                sx={{\n                    display: \"flex\",\n                    height: \"100vh\",\n                    justifyContent: \"space-between\",\n                    paddingBottom: \"10vh\",\n                    alignItems: \"center\",\n\n                    \"@media only screen and (max-height: 580px)\": {\n                        \".hello-text\": {\n                            fontSize: \"2em\",\n                        },\n                        \".the-big-name\": {\n                            fontSize: \"3em\",\n                        },\n                    },\n                    \".the-big-name, .description, .subtitle, .hello-text\": {\n                        fontFamily: \"Roboto\",\n                        fontWeight: \"200\",\n                        textAlign: \"left\",\n                    },\n\n                    \".hello-text\": {\n                        position: \"sticky\",\n                        fontWeight: \"bold\",\n                    },\n\n                    \".description\": {\n                        fontSize: \"2em\",\n\n                        span: {\n                            textShadow: \"0px 0px 2px #000\",\n                        },\n                    },\n\n                    \".subtitle\": {\n                        fontSize: \"1.2em\",\n                    },\n\n                    \".buttons-box\": {\n                        display: \"flex\",\n                        marginTop: \"3em\",\n                        justifyContent: \"left\",\n                        columnGap: \"5em\",\n\n                        \".work-button, .contact-button\": {\n                            padding: \"1em 4em\",\n                            borderRadius: \"5em\",\n                            backgroundColor: \"white\",\n                            color: main_color,\n                        },\n                    },\n                    \".box-image\": {\n                        img: {\n                            width: \"500px\",\n                            borderRadius: \"5em\",\n                        },\n                    },\n                    \"@media only screen and (max-width: 780px)\": {\n                        height: \"100vh\",\n\n                        \".box-image\": {\n                            display: \"none\",\n                        },\n\n                        \".hello-text, .the-big-name, .description, .subtitle\": {\n                            textAlign: \"center\",\n                        },\n\n                        \".buttons-box\": {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            rowGap: \"1em\",\n                            marginTop: \"3em\",\n                            alignItems: \"center\",\n\n                            \".work-button, .contact-button\": {\n                                width: \"15rem\",\n                                borderRadius: \"5em\",\n                            },\n                        },\n                    },\n                }}\n            >\n                <Box>\n                    <Fade in={true} timeout={{ enter: 2000 }}>\n                        <Box>\n                            <Typography className=\"hello-text\" variant=\"h3\">\n                                Hello!\n                            </Typography>\n                            <Typography className=\"the-big-name\" variant=\"h1\">\n                                I'm <span className={`${colorChange}`}>Pedro.</span>\n                            </Typography>\n                            <Typography className=\"description\" variant=\"body1\">\n                                I'm a Full-Stack Developer,\n                                <br />\n                                working with <span>Node.JS and Typescript.</span>\n                            </Typography>\n                            <Typography variant=\"body1\" className=\"subtitle\">\n                                I also work with Firebase, Heroku and GCP clouds.\n                            </Typography>\n                        </Box>\n                    </Fade>\n                    <Fade in={true} timeout={{ enter: 5000 }}>\n                        <Box className=\"buttons-box\">\n                            <Button\n                                className=\"contact-button\"\n                                variant=\"contained\"\n                                disableRipple\n                                size=\"large\"\n                                startIcon={<EmailRoundedIcon />}\n                                onClick={() => {\n                                    window.scrollBy({\n                                        top: 9999,\n                                        left: 0,\n                                        behavior: \"smooth\",\n                                    });\n                                    // window.scrollTo({\n                                    //     top: 9999,\n                                    //     left: 0,\n                                    //     behavior: \"smooth\",\n                                    // })\n                                }}\n                            >\n                                Contact\n                            </Button>\n                            <Button\n                                className=\"work-button\"\n                                variant=\"contained\"\n                                disableRipple\n                                startIcon={<ComputerRoundedIcon />}\n                                size=\"large\"\n                                onClick={() => (!animate ? setAnimate(true) : setAnimate(false))}\n                            >\n                                My Work\n                            </Button>\n                        </Box>\n                    </Fade>\n                </Box>\n                <Box className=\"box-image\">\n                    <Fade in={true} timeout={{ enter: 8000 }}>\n                        <img className={`${float}`} src={img1} alt=\"Hero Placeholder\" />\n                    </Fade>\n                </Box>\n            </Container>\n        </div>\n    );\n}\n","import { SxProps, Theme } from \"@mui/system\";\r\nconst main_color = \"#49a6e9\";\r\n\r\nexport const mainContainer: SxProps<Theme> = {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    columnGap: \"10em\",\r\n\r\n    \".dev-box\": {\r\n        \".MuiTypography-root\": {\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"200\",\r\n            textAlign: \"center\",\r\n        },\r\n    },\r\n\r\n    \"@media only screen and (max-width: 780px)\": {\r\n        \".dev-box\": {\r\n            display: \"none\",\r\n        },\r\n    },\r\n\r\n    \".contact-box\": {\r\n        \".email\": {\r\n            borderColor: main_color,\r\n            gridArea: \"em\",\r\n        },\r\n        \".subject\": {\r\n            gridArea: \"sj\",\r\n        },\r\n        \".message\": {\r\n            gridArea: \"ms\",\r\n        },\r\n        \".title\": {\r\n            gridArea: \"tt\",\r\n            fontSize: \"3em\",\r\n            fontWeight: \"200\",\r\n        },\r\n        \".loading-button\": {\r\n            gridArea: \"bs\",\r\n            width: \"10em\",\r\n            borderRadius: \"5em\",\r\n        },\r\n        backgroundColor: \"white\",\r\n        display: \"grid\",\r\n        justifyContent: \"center\",\r\n        gridGap: \"2vh\",\r\n        gridTemplateAreas: `\"tt tt tt\"\r\n                            \"em sj sj\"\r\n                            \"ms ms ms\"\r\n                            \". . bs\"`,\r\n        \"@media only screen and (max-width: 780px)\": {\r\n            \".title\": {\r\n                fontSize: \"2.5em\",\r\n                fontWeight: \"200\",\r\n            },\r\n        },\r\n    },\r\n};\r\n","import {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    TextField,\r\n    Typography,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    TextFieldProps,\r\n} from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport emailJS from \"emailjs-com\";\r\nimport { Box } from \"@mui/system\";\r\nimport { mainContainer } from \"./styles/Contact\";\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nconst emailRegex =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\ninterface userInfo {\r\n    email: string;\r\n    subject: string;\r\n    message: string;\r\n}\r\nexport default function Contact() {\r\n    emailJS.init(\"user_d1mS4JOxBA5704aYP1SJ4\");\r\n\r\n    let emailObject = {\r\n        email: \"\",\r\n        subject: \"\",\r\n        message: \"\",\r\n    };\r\n\r\n    const [form, setForm] = useState<userInfo>(emailObject);\r\n    const emailRef = useRef<TextFieldProps>();\r\n    const messageRef = useRef<TextFieldProps>();\r\n    const subjectRef = useRef<TextFieldProps>();\r\n\r\n    const [popup, setPopup] = useState(false);\r\n    const [popup_error, setPopup_error] = useState(false);\r\n    const [popup_emptyFields, setPopup_emptyFields] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [buttonEnabled, setButtonEnabled] = useState(false);\r\n\r\n    const handlePopup = (state: string) => {\r\n        switch (state) {\r\n            case \"send_success\":\r\n                setPopup(true);\r\n                break;\r\n            case \"error\":\r\n                setPopup_error(true);\r\n                break;\r\n            case \"emptyfields\":\r\n                setPopup_emptyFields(true);\r\n                break;\r\n            case \"closing\":\r\n                setPopup_emptyFields(false);\r\n                setPopup(false);\r\n                setPopup_error(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleChange = (prop: keyof userInfo) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setForm({ ...form, [prop]: e.target.value });\r\n        if (prop === \"email\") {\r\n            if (emailRegex.test(e.target.value)) setButtonEnabled(true);\r\n            else setButtonEnabled(false);\r\n        }\r\n    };\r\n\r\n    const handleEmailSending = () => {\r\n        setLoading(true);\r\n        emailObject.email = form.email;\r\n        emailObject.subject = form.subject;\r\n        emailObject.message = form.message;\r\n\r\n        if (!emailObject.email || !emailObject.subject || !emailObject.message) {\r\n            setLoading(false);\r\n            handlePopup(\"emptyfields\");\r\n        } else {\r\n            emailJS.send(\"default_service\", \"template_tis81xk\", emailObject).then(\r\n                function (response) {\r\n                    console.log(response);\r\n                    handlePopup(\"send_success\");\r\n                    setLoading(false);\r\n                },\r\n                function (error) {\r\n                    console.log(error);\r\n                    setLoading(false);\r\n                    handlePopup(\"error\");\r\n                    console.log(error);\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container sx={mainContainer}>\r\n            <Box className=\"dev-box\" alignSelf=\"center\">\r\n                <Typography variant=\"h3\">{\"¯\\\\_(ツ)_/¯\"}</Typography>\r\n                <Typography variant=\"h5\" marginTop=\"1em\">\r\n                    Sorry, nothing to see here... yet!\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    ...but the e-mail form on the right is working fine, feel free to use it!\r\n                </Typography>\r\n            </Box>\r\n            <Box className=\"contact-box\">\r\n                <Typography className=\"title\">Contact Me</Typography>\r\n                <TextField\r\n                    className=\"email\"\r\n                    onChange={handleChange(\"email\")}\r\n                    inputRef={emailRef}\r\n                    defaultValue={form.email}\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    variant=\"outlined\"\r\n                    required={true}\r\n                    label=\"E-mail\"\r\n                />\r\n                <TextField\r\n                    className=\"subject\"\r\n                    onChange={handleChange(\"subject\")}\r\n                    inputRef={subjectRef}\r\n                    defaultValue={form.subject}\r\n                    id=\"subject-field\"\r\n                    variant=\"outlined\"\r\n                    label=\"Subject\"\r\n                />\r\n                <TextField\r\n                    className=\"message\"\r\n                    defaultValue={form.message}\r\n                    inputRef={messageRef}\r\n                    onChange={handleChange(\"message\")}\r\n                    multiline\r\n                    rows={4}\r\n                    label=\"Say something\"\r\n                    id=\"message-field\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <LoadingButton\r\n                    className=\"loading-button\"\r\n                    loading={loading}\r\n                    disabled={!buttonEnabled}\r\n                    variant=\"outlined\"\r\n                    loadingIndicator=\"Sending...\"\r\n                    onClick={handleEmailSending}\r\n                >\r\n                    Send\r\n                </LoadingButton>\r\n                <Dialog\r\n                    open={popup}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Thank you!\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            I'll be reading your e-mail soon.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => handlePopup(\"closing\")} autoFocus>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={popup_emptyFields}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                        {\"Please fill all the fields.\"}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Looks like one or more fields is empty, please fill all of them.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => handlePopup(\"closing\")} autoFocus>\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={popup_error}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                        {\"Oops... Something went wrong.\"}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            An error occurred trying to send the e-mail.\r\n                            <br />\r\n                            Check the e-mail field, or maybe one of the text fields is blank.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => handlePopup(\"closing\")} autoFocus>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.7d46b8e7.svg\";","export default __webpack_public_path__ + \"static/media/us.76d18be5.svg\";","export default __webpack_public_path__ + \"static/media/br.68905a4e.svg\";","export default __webpack_public_path__ + \"static/media/discord.c935b933.svg\";","import { ThemeProvider } from \"@emotion/react\";\nimport {\n    Button,\n    Container,\n    createTheme,\n    IconButton,\n    Typography,\n    ClickAwayListener,\n    MenuItem,\n    MenuList,\n    Paper,\n    Grow,\n    Popper,\n    Box,\n    Slide,\n} from \"@mui/material\";\nimport TranslateIcon from \"@mui/icons-material/Translate\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport logo from \"../images/logo.svg\";\nimport us_png from \"../images/us.svg\";\nimport br_png from \"../images/br.svg\";\nimport discord_svg from \"../images/discord.svg\";\nimport { useRef, useState, useEffect } from \"react\";\nexport default function Head() {\n    const main_color = \"#49a6e9\";\n\n    const [open, setOpen] = useState(false);\n    const [animate, setAnimate] = useState(false);\n    const anchorRef = useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleErrorPopup = (event: Event | React.SyntheticEvent) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n\n        return !animate ? setAnimate(true) : setAnimate(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === \"Tab\") {\n            event.preventDefault();\n            setOpen(false);\n        } else if (event.key === \"Escape\") {\n            setOpen(false);\n        }\n    }\n\n    const prevOpen = useRef(open);\n    useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    const theme = createTheme({\n        components: {\n            MuiButton: {\n                styleOverrides: {\n                    root: {\n                        borderRadius: 0,\n                        color: \"black\",\n                        \"&:hover\": {\n                            color: main_color,\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n    const a_style = {\n        color: main_color,\n        textDecoration: \"none\",\n    };\n\n    return (\n        <Box\n            position=\"sticky\"\n            top=\"0\"\n            width=\"100%\"\n            zIndex=\"999\"\n            sx={{ backgroundColor: \"rgba(255,255,255,0.70)\", backdropFilter: \"blur(20px)\" }}\n        >\n            <ThemeProvider theme={theme}>\n                <nav>\n                    <Container\n                        maxWidth={false}\n                        disableGutters\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                padding: \"1em\",\n                                a: {\n                                    display: \"flex\",\n                                    textDecoration: \"none\",\n                                },\n                                img: {\n                                    width: \"24px\",\n                                },\n\n                                \".title\": {\n                                    marginLeft: \"0.2em\",\n                                    fontFamily: \"Roboto\",\n                                    userSelect: \"none\",\n                                    color: \"black\",\n                                    fontSize: \"1.5em\",\n                                },\n                            }}\n                        >\n                            <div style={{ display: \"flex\", width: \"10%\" }}>\n                                <a href=\"/\">\n                                    <Grow in={true} timeout={{ enter: 1000 }}>\n                                        <img src={logo} alt=\"Website Logo\" />\n                                    </Grow>\n                                    <Grow in={true} timeout={{ enter: 1000 }}>\n                                        <Typography className=\"title\">\n                                            Pedro<span style={{ color: main_color }}>Dev</span>\n                                        </Typography>\n                                    </Grow>\n                                </a>\n                            </div>\n                        </Box>\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                \".menu\": {\n                                    display: \"none\",\n                                    marginRight: \"1em\",\n                                    color: main_color,\n                                },\n\n                                \"@media only screen and (max-width: 780px)\": {\n                                    \".menu\": {\n                                        display: \"inherit\",\n                                    },\n                                    \".info-box, .links-box\": {\n                                        display: \"none\",\n                                    },\n                                },\n                            }}\n                        >\n                            <IconButton className=\"menu\">\n                                <MenuRoundedIcon />\n                            </IconButton>\n                            <Box\n                                className=\"info-box\"\n                                component=\"ul\"\n                                sx={{\n                                    padding: 0,\n                                    display: \"inherit\",\n                                    justifyContent: \"right\",\n                                    columnGap: \"1em\",\n                                    listStyle: \"none\",\n                                    alignItems: \"center\",\n                                    margin: 0,\n                                    Button: {\n                                        padding: 0,\n                                    },\n                                }}\n                            >\n                                <li>\n                                    <Slide in={true} timeout={{ enter: 500 }}>\n                                        <Button \n                                        onClick={() => {\n                                            window.scrollTo({\n                                                top: 0,\n                                                left: 0,\n                                                behavior: \"smooth\",\n                                            })\n                                        }}\n                                        variant=\"text\" disableRipple>\n                                            About Me\n                                        </Button>\n                                    </Slide>\n                                </li>\n                                <li>\n                                    <Slide in={true} timeout={{ enter: 1000 }}>\n                                        <Button variant=\"text\" disableRipple>\n                                            Projects\n                                        </Button>\n                                    </Slide>\n                                </li>\n                                <li>\n                                    <Slide in={true} timeout={{ enter: 1500 }}>\n                                        <Button variant=\"text\" disableRipple>\n                                            Skills\n                                        </Button>\n                                    </Slide>\n                                </li>\n                                <li>\n                                    <Slide in={true} timeout={{ enter: 2000 }}>\n                                        <Button\n                                            onClick={() =>\n                                                window.scrollTo({\n                                                    top: 999,\n                                                    left: 0,\n                                                    behavior: \"smooth\",\n                                                })\n                                            }\n                                            variant=\"text\"\n                                            disableRipple\n                                        >\n                                            Contact\n                                        </Button>\n                                    </Slide>\n                                </li>\n                            </Box>\n                            <Grow in={true} timeout={{ enter: 1000 }}>\n                                <Box\n                                    className=\"links-box\"\n                                    component=\"ul\"\n                                    sx={{\n                                        padding: \"0 1em 0 2em\",\n                                        margin: 0,\n                                        display: \"flex\",\n                                        listStyle: \"none\",\n                                        li: {\n                                            alignSelf: \"center\",\n                                        },\n\n                                        \".translate-button\": {\n                                            color: main_color,\n                                            marginRight: \"1em\",\n                                        },\n                                    }}\n                                >\n                                    <li>\n                                        <IconButton\n                                            className=\"translate-button\"\n                                            ref={anchorRef}\n                                            id=\"composition-button\"\n                                            onClick={handleToggle}\n                                        >\n                                            <TranslateIcon />\n                                        </IconButton>\n                                        <Popper\n                                            open={open}\n                                            anchorEl={anchorRef.current}\n                                            role={undefined}\n                                            placement=\"bottom-start\"\n                                            transition\n                                            disablePortal\n                                        >\n                                            {({ TransitionProps, placement }) => (\n                                                <Grow\n                                                    {...TransitionProps}\n                                                    style={{\n                                                        transformOrigin:\n                                                            placement === \"bottom-start\"\n                                                                ? \"left top\"\n                                                                : \"left bottom\",\n                                                    }}\n                                                >\n                                                    <Paper>\n                                                        <ClickAwayListener\n                                                            onClickAway={handleErrorPopup}\n                                                        >\n                                                            <MenuList\n                                                                autoFocusItem={open}\n                                                                id=\"composition-menu\"\n                                                                aria-labelledby=\"composition-button\"\n                                                                onKeyDown={handleListKeyDown}\n                                                            >\n                                                                <MenuItem\n                                                                    onClick={handleErrorPopup}\n                                                                    sx={{ width: \"150px\" }}\n                                                                >\n                                                                    <img\n                                                                        src={br_png}\n                                                                        alt=\"Brazil\"\n                                                                        style={{\n                                                                            marginRight: \".5em\",\n                                                                            width: \"20%\",\n                                                                            position: \"relative\",\n                                                                        }}\n                                                                    />\n                                                                    Português\n                                                                </MenuItem>\n                                                                <MenuItem\n                                                                    onClick={handleErrorPopup}\n                                                                    sx={{ width: \"150px\" }}\n                                                                >\n                                                                    <img\n                                                                        src={us_png}\n                                                                        alt=\"United States\"\n                                                                        style={{\n                                                                            marginRight: \".5em\",\n                                                                            width: \"20%\",\n                                                                            position: \"relative\",\n                                                                        }}\n                                                                    />\n                                                                    English\n                                                                </MenuItem>\n                                                            </MenuList>\n                                                        </ClickAwayListener>\n                                                    </Paper>\n                                                </Grow>\n                                            )}\n                                        </Popper>\n                                    </li>\n                                    <li>\n                                        <a href=\"https://twitter.com/bfobenga\">\n                                            <IconButton sx={a_style}>\n                                                <TwitterIcon />\n                                            </IconButton>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a href=\"https://www.linkedin.com/in/pedro-henrique-dev1997/\">\n                                            <IconButton sx={a_style}>\n                                                <LinkedInIcon />\n                                            </IconButton>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a href=\"https://github.com/fobdev\">\n                                            <IconButton sx={a_style}>\n                                                <GitHubIcon />\n                                            </IconButton>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a href=\"https://discordapp.com/users/244270921286811648\">\n                                            <IconButton sx={a_style}>\n                                                <img\n                                                    src={discord_svg}\n                                                    alt=\"Discord\"\n                                                    style={{\n                                                        width: \"24px\",\n                                                        height: \"24px\",\n                                                    }}\n                                                />\n                                            </IconButton>\n                                        </a>\n                                    </li>\n                                </Box>\n                            </Grow>\n                        </Box>\n                    </Container>\n                </nav>\n            </ThemeProvider>\n        </Box>\n    );\n}\n","import \"./App.css\";\nimport Hero from \"./components/Hero\";\n// import Footer from \"./components/Footer\";\nimport Contact from \"./components/Contact\";\nimport Head from \"./components/Head\";\n// import About from \"./components/About\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDy5OwVes7kWSPyYB0_9l100Rr0rmAkf2s\",\n    authDomain: \"pedrodev-f4d57.firebaseapp.com\",\n    projectId: \"pedrodev-f4d57\",\n    storageBucket: \"pedrodev-f4d57.appspot.com\",\n    messagingSenderId: \"2404850739\",\n    appId: \"1:2404850739:web:6918f9470561a5b58c9746\",\n    measurementId: \"G-3GYZLMB0BQ\",\n};\n\n// Import the functions you need from the SDKs you need\n\nfunction App() {\n    const app = initializeApp(firebaseConfig);\n    getAnalytics(app);\n    return (\n        <div>\n            <Head />\n            <Hero />\n            <Contact />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}